library(rms)
library(MASS)
library(e1071)
library(ROCR)
library(gplots)
library(pROC)
library(rpart)
library(randomForest)
library(ggpubr)
library(dtplyr)
load("~/Desktop/Bakırçay University/2. Donem/Pazarlama ve Musteri Analitiği/Final Proje Sunumu/TelcoChurnPrediction_SabanEmreBalikci/WA_Fn-UseC_-Telco-Customer-Churn.csv")
at <- read.csv("..\\WA_Fn-UseC_-Telco-Customer-Churn.csv")
at <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
head(at)
library(plyr)
glimpse(data)
getwd()
getwd()
library(plyr)
glimpse(data)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
data <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(data)
library(plyr)
sapply(churn, function(x) sum(is.na(x)))
sapply(data, function(x) sum(is.na(x)))
veri[is.na(veri$TotalCharges),]
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
veri[is.na(veri$TotalCharges),]
sum(is.na(veri$TotalCharges))/nrow(veri)
View(data)
View(veri)
View(at)
View(at)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
sapply(veri, function(x) sum(is.na(x)))
veri[is.na(veri$TotalCharges)]
veri[is.na(veri$TotalCharges),]
veri[is.na(veri$TotalCharges),]
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
View(veri)
temiz_veri <- veri[complete.cases(veri), ]
sum(is.na(veri$TotalCharges))/nrow(veri)
temiz_veri <- veri[complete.cases(veri), ]
---
title: "Prediction of customer churn situation"
author: "Mayank Sharma"
date: "6/30/2018"
output: html_document
---
---
title: "Telecomm Customer"
output: html_document
Group Members: Abhinav Wasnik, Mayank Sharma
---
#Installing and loading the package
```{r}
library(plyr)
library(ggplot2)
library(caret)
library(randomForest)
library(party)
```
#Reading the dataset file and checking the structure using str()
```{r}
Telco <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
str(Telco)
```
#Check the number of missing values in each column
```{r}
sapply(Telco, function(x) sum(is.na(x)))
```
```{r}
Telco <- Telco[complete.cases(Telco), ]
```
#Removing the columns we do not require
```{r}
Telco$customerID <- NULL
```
#### Logistic Regression ####
#We will split the dataset into Train and Test dataset
```{r}
trn<- createDataPartition(Telco$Churn,p=0.7,list=FALSE)
set.seed(2017)
train<- Telco[trn,]
test<- Telco[-trn,]
```
#Now, we will try to fit the model within the glm() for logistic regression
```{r}
L_Model <- glm(Churn ~ .,family=binomial(link="logit"),data=train)
print(summary(L_Model))
```
#Analyzing the model further on few more features
```{r}
anova(L_Model, test="Chisq")
```
#Now we will evaluate the predictive ability  of the model
```{r}
test$Churn <- as.character(test$Churn)
test$Churn[test$Churn=="No"] <- "0"
test$Churn[test$Churn=="Yes"] <- "1"
FitResult <- predict(L_Model,newdata=test,type='response')
FitResult <- ifelse(FitResult > 0.5,1,0)
MisClassificationError <- mean(FitResult != test$Churn)
print(paste('Accuracy of Logistic Regression',1-MisClassificationError))
```
#Lets make a confusion matrix for the logistic regression performed above
```{r}
print("Logistic Regression Confusion Matrix"); table(test$Churn, FitResult > 0.5)
```
#### Decision Tree ####
#Creating a decision tree
```{r}
tree <- ctree(Churn~Contract+tenure+PaperlessBilling, train)
```
#Plotting the decision tree created above
```{r}
plot(tree, type='simple')
```
#Predicting the result and making a confusion matrix for decision tree
```{r}
pred_tree <- predict(tree, test)
print("Decision Tree Confusion Matrix"); table(Predicted = pred_tree, Actual = test$Churn)
```
#Checking the accuracy of the decision tree
```{r}
pred1 <- predict(tree, train)
table1 <- table(Predicted = pred1, Actual = train$Churn)
table2 <- table(Predicted = pred_tree, Actual = test$Churn)
```
#Printing the accuracy result
```{r}
print(paste('Accuracy of Decision Tree', sum(diag(table2))/sum(table2)))
```
#### Random Forest ####
#Creating the initial model of Random forest
```{r}
set.seed(2017)
Model_RF <- randomForest(Churn ~., data = train)
print(Model_RF)
```
#Converting the 0 and 1 values to No and Yes respectively
```{r}
test$Churn <- as.character(test$Churn)
test$Churn[test$Churn=="0"] <- "No"
test$Churn[test$Churn=="1"] <- "Yes"
```
#Preforming prediction and confusion matrix
```{r}
Pred_RF <- predict(Model_RF, test)
#Pred_RF
#test$Churn
caret::confusionMatrix(Pred_RF, test$Churn)
```
#Finding the error rate for Random Forest model
```{r}
plot(Model_RF)
```
#Tuning the model
```{r}
t <- tuneRF(train[, -18], train[, 18], stepFactor = 0.5, plot = TRUE, ntreeTry = 200, trace = TRUE, improve = 0.05)
```
#Again fitting the random forest model
```{r}
Model_RF_new <- randomForest(Churn ~., data = train, ntree = 200, mtry = 2, importance = TRUE, proximity = TRUE)
print(Model_RF_new)
```
#Perform prediction and confusion matrix
```{r}
Pred_RF_new <- predict(Model_RF_new, test)
caret::confusionMatrix(Pred_RF_new, test$Churn)
```
#Checking the importance of features of random forest
```{r}
varImpPlot(Model_RF_new, sort=T, n.var = 10, main = 'Top 10 Feature Importance')
```
library(plyr)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(caret)
library(repr)
library(caTools)
library(rpart)
library(rpart.plot)
library(ggpubr)
install.packages("repr")
# input the data and take a look on the variables
data <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(data)
data <- data[complete.cases(data),] # removing na's
data <- data.frame(lapply(data, function(x) {
gsub("No internet service", "No", x)}))
data <- data.frame(lapply(data, function(x) {
gsub("No phone service", "No", x)}))
data$SeniorCitizen <- as.factor(ifelse(data$SeniorCitizen==1, 'YES', 'NO'))
sapply(veri, function(x) sum(is.na(x)))
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
sapply(veri, function(x) sum(is.na(x)))
veri[is.na(veri$TotalCharges),]
sum(is.na(veri$TotalCharges))/nrow(veri)
#Eksik veri olup olmadığını görerek başlayalım.
sapply(veri, function(x) sum(is.na(x)))
veri[is.na(veri$TotalCharges),]
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
churn <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
churn <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
library(data.table)
churn <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
churn <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
datatable(churn, rownames = FALSE, filter="top", options = list(pageLength = 6, scrollX= T))
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Gender plot
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Senior citizen plot
p2 <- ggplot(temiz_veri, aes(x = SeniorCitizen)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Partner plot
p3 <- ggplot(temiz_veri, aes(x = Partner)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Dependents plot
p4 <- ggplot(temiz_veri, aes(x = Dependents)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Plot demographic data within a grid
grid.arrange(p1, p2, p3, p4, ncol=2)
library(data.table)
Churn <- as.data.frame(fread("WA_Fn-UseC_-Telco-Customer-Churn.csv", encoding = 'UTF-8')) str(Churn)
Churn <- as.data.frame(fread("WA_Fn-UseC_-Telco-Customer-Churn.csv"))
glimpse(Churn)
library(plyr)
Churn$gender <- as.factor(Churn$gender) Churn$Partner <- as.factor(Churn$Partner) Churn$Dependents <- as.factor(Churn$Dependents) Churn$PhoneService <- as.factor(Churn$PhoneService) Churn$Contract <- as.factor(Churn$Contract) Churn$PaperlessBilling <- as.factor(Churn$PaperlessBilling) Churn$Churn <- as.factor(Churn$Churn) Churn$PaymentMethod <- as.factor(Churn$PaymentMethod) Churn$InternetService <- as.factor(Churn$InternetService)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
sapply(veri, function(x) sum(is.na(x)))
#Toplam Masraflar değişkeninde eksik değerleri olan 11 durum vardır. Bu özel durumları görelim.
veri[is.na(veri$TotalCharges),]
sum(is.na(veri$TotalCharges))/nrow(veri)
temiz_veri <- veri[complete.cases(veri), ]
temiz_veri$SeniorCitizen <- as.factor(mapvalues(temiz_veri$SeniorCitizen,
from=c("0","1"),
to=c("No", "Yes")))
temiz_veri$MultipleLines <- as.factor(mapvalues(temiz_veri$MultipleLines,
from=c("No phone service"),
to=c("No")))
for(i in 10:15){
temiz_veri[,i] <- as.factor(mapvalues(temiz_veri[,i],
from= c("No internet service"), to= c("No")))
temiz_veri$customerID <- NULL
#Gender plot
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Senior citizen plot
p2 <- ggplot(temiz_veri, aes(x = SeniorCitizen)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Partner plot
p3 <- ggplot(temiz_veri, aes(x = Partner)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Dependents plot
p4 <- ggplot(temiz_veri, aes(x = Dependents)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Plot demographic data within a grid
grid.arrange(p1, p2, p3, p4, ncol=2)
#Gender plot
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Senior citizen plot
p2 <- ggplot(temiz_veri, aes(x = SeniorCitizen)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Partner plot
p3 <- ggplot(temiz_veri, aes(x = Partner)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Dependents plot
p4 <- ggplot(temiz_veri, aes(x = Dependents)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Plot demographic data within a grid
grid.arrange(p1, p2, p3, p4, ncol=2)
set.seed(56)
split_train_test <- createDataPartition(temiz_veri$Churn,p=0.7,list=FALSE)
dtrain<- temiz_veri[split_train_test,]
dtest<- temiz_veri[-split_train_test,]
#Gender plot
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Senior citizen plot
p2 <- ggplot(temiz_veri, aes(x = SeniorCitizen)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Partner plot
p3 <- ggplot(temiz_veri, aes(x = Partner)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Dependents plot
p4 <- ggplot(temiz_veri, aes(x = Dependents)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Plot demographic data within a grid
grid.arrange(p1, p2, p3, p4, ncol=2)
#Gender plot
p1 <- ggplot(temiz_veri, aes(x = gender)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Senior citizen plot
p2 <- ggplot(temiz_veri, aes(x = SeniorCitizen)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Partner plot
p3 <- ggplot(temiz_veri, aes(x = Partner)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Dependents plot
p4 <- ggplot(temiz_veri, aes(x = Dependents)) +
geom_bar() +
geom_text(aes(y = ..count.. -200,
label = paste0(round(prop.table(..count..),4) * 100, '%')),
stat = 'count',
position = position_dodge(.1),
size = 3)
#Plot demographic data within a grid
grid.arrange(p1, p2, p3, p4, ncol=2)
p3 <- ggplot(temiz_veri, aes(x = Partner)) + geom_bar() + geom_text(aes(y = ..count.. -200,   label = paste0(round(prop.table(..count..),4) * 100, '%')), stat = 'count', position = position_dodge(.1), size = 3)
grid.arrange(p1, p2, p3, p4, ncol=2)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
glimpse(veri)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
library(plyr)
library(randomForest)
library(rpart)
library(rpart.plot)
library(caret)
library(ggplot2)
library(gridExtra)
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
veri <- read.csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
glimpse(veri)
